---
# tasks file for android_studio
- name: Install Block
  block:
    - name: Check if i386 is enabled
      # shell because the ansible.builtin.dpkg_selections command does only support selection in Ansible. And command does not allow piping
      ansible.builtin.shell:
        cmd: dpkg --print-foreign-architectures | grep i386
      register: result_i386_check
      changed_when: result_i386_check.rc == 1
      failed_when: result_i386_check.rc > 1
      when: ansible_architecture == "x86_64"

    - name: Enable i386 architecture
      # command because the ansible.builtin.dpkg_selections command does only support selection in Ansible.
      ansible.builtin.command:
        cmd: dpkg --add-architecture i386
      register: add_architecture_output
      changed_when: add_architecture_output.rc != 0
      when: result_i386_check.rc != 0

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 600
      when: result_i386_check.rc != 0 and ansible_os_family == "Debian"

    - name: Install required libraries for 64-bit machines
      ansible.builtin.package:
        name:
          - libc6:i386
          - libncurses5:i386
          - libstdc++6:i386
          - lib32z1
          - libbz2-1.0:i386
        state: present
      when: ansible_architecture == "x86_64"

    - name: Create Android-Studio download dir on remote host if it does not exist
      ansible.builtin.file:
        path: "{{ download_dir_on_remote_host }}/android_studio"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Download installer
      become: true
      become_user: "{{ ansible_user }}"
      ansible.builtin.get_url:
        url: "https://redirector.gvt1.com/edgedl/android/studio/ide-zips/{{ android_studio.version }}/android-studio-{{ android_studio.version }}-linux.tar.gz"
        dest: "{{ download_dir_on_remote_host }}/android_studio/android-studio-{{ android_studio.version }}-linux.tar.gz"
        checksum: "{{ android_studio.checksum }}"
        timeout: 60
      register: android_studio_installer

    - name: Clean destination folder if needed
      ansible.builtin.file:
        path: "/opt/android-studio"
        state: absent
      when: android_studio_installer.changed

    - name: Execute installer
      ansible.builtin.unarchive:
        src: "{{ download_dir_on_remote_host }}/android_studio/android-studio-{{ android_studio.version }}-linux.tar.gz"
        dest: "/opt/"
        remote_src: true
      when: android_studio_installer.changed
